@page "/recipesTest"

@using Recipe_Proj.Services
@using Recipe_Proj.DTOs
@inject IRecipeService RecipeService
@inject HttpClient Http

<input type="text" @bind="searchKeywords" placeholder="Enter keywords..." />
<button @onclick="SearchRecipes">Generate</button>

@if (recipes == null)
{
    <p>Type in keywords and click 'Generate' to search for recipes.</p>
}
else if (recipes.Count == 0)
{
    <p>No recipes found.</p>
}
else
{
    <ul>
        @foreach (var recipe in recipes)
        {
            <li>@recipe.RecipeName</li>
        }
    </ul>
}

@code {
    private string searchKeywords;
    private List<SimpleRecipeDTO> recipes;

    private async Task SearchRecipes()
    {
        if (!string.IsNullOrWhiteSpace(searchKeywords))
        {
            var response = await Http.PostAsJsonAsync("api/Recipes/SearchByKeywords", new { searchKeywords });
            if (response.IsSuccessStatusCode)
            {
                recipes = await response.Content.ReadFromJsonAsync<List<SimpleRecipeDTO>>();
            }
            else
            {
                // Handle error response here, possibly setting an error message to display to the user.
            }
        }
        else
        {
            recipes = new List<SimpleRecipeDTO>();
        }
    }
}
